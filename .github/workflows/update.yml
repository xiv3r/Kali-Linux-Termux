name: Updating Kali Linux

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  download-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Downloading Kali Linux
      run: |
        wget https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-minimal-arm64.tar.xz
        wget https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-minimal-armhf.tar.xz
        wget https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-minimal-amd64.tar.xz
        wget https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-minimal-i386.tar.xz

    - name: Delete existing assets from release
      run: |
        gh release delete-asset "kali-latest" kali-nethunter-rootfs-*.tar.xz --yes || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload assets to existing release
      run: |
        gh release view "kali-latest" || gh release create "kali-latest" \
          --title "Kali Linux Lastest Release: $(date +'%Y-%m-%d')" \
          --notes "
       Termux Lastest
       • APK
       https://github.com/termux/termux-app/releases/download/v0.118.3/termux-app_v0.118.3+github-debug_universal.apk

       • Releases
       https://github.com/termux/termux-app/releases/

       Nethunter VNC
       • APK
       https://store.nethunter.com/repo/com.offsec.nethunter.kex_11525001.apk

       • Releases
       https://store.nethunter.com/packages/com.offsec.nethunter.kex" \

        
        gh release upload "kali-latest" kali-nethunter-rootfs-*.tar.xz --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
